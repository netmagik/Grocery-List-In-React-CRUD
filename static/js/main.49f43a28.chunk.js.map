{"version":3,"sources":["tables/GroceryList.js","forms/AddItemForm.js","forms/EditItemForm.js","App.js","index.js"],"names":["GroceryList","props","items","length","map","item","key","id","name","quantity","className","onClick","editRow","deleteItem","colSpan","AddItemForm","intitialFormState","useState","setItem","handleInputChange","event","target","value","onSubmit","preventDefault","addItem","type","onChange","EditItemForm","currentItem","useEffect","updateItem","setEditing","App","setItems","editing","setCurrentItem","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49f43a28.chunk.js","sourcesContent":["import React from 'react';\n\nconst GroceryList = (props) => {\n    return (\n    <table>\n        <thead>\n            <tr>\n            <th>Item</th>\n            <th>Quantity</th>\n            <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            {props.items.length > 0 ? (\n                props.items.map((item) => (\n                    <tr key={item.id}>\n                        <td>{item.name}</td>\n                        <td>{item.quantity}</td>\n                        <td>\n                            <button \n                            className=\"button muted-button\"\n                            onClick={() => {\n                                props.editRow(item)\n                            }}\n                            >Edit\n                            </button>\n                            <button \n                            onClick={() => props.deleteItem(item.id)}\n                            className=\"button muted-button\">Delete</button>\n                        </td>\n                    </tr>\n                ))\n            ) : (\n                <tr>\n                    <td colSpan={3}>No Items Found</td>\n                </tr>\n            )}\n        </tbody>\n    </table>\n    );\n}\n\nexport default GroceryList;","import React, { useState } from 'react';\n\nconst AddItemForm = (props) => {\n    const intitialFormState = {id: null, name: '', quantity: ''}\n\n    const [item, setItem] = useState(intitialFormState);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target\n        \n            setItem({...item, [name]: value})\n    }\n\n    return(\n        <form\n        onSubmit={event => {\n            event.preventDefault()\n            // do not submit empty values - validation\n            if (!item.name || !item.quantity) return\n            // add item\n            props.addItem(item)\n            // reset the form to initial empty state after submission\n            setItem(intitialFormState)\n        }}\n        >\n            <label>Item</label>\n            <input \n            type=\"text\" \n            name=\"name\" \n            value={item.name}\n            onChange={handleInputChange}\n            />\n            <label>Quantity</label>\n            <input \n            type=\"number\" \n            name=\"quantity\" \n            value={item.quantity}\n            onChange={handleInputChange}\n            />\n            <button>Add New Item</button>\n        </form>\n    )\n}\n\n\nexport default AddItemForm;","import React, { useState, useEffect } from 'react';\n\nconst EditItemForm = (props) => {\n    const [item, setItem] = useState(props.currentItem);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target\n        \n            setItem({...item, [name]: value})\n    }\n\n    useEffect(() => {\n        setItem(props.currentItem)\n    }, [props])\n\n\n    return (\n        <form\n        onSubmit={event => {\n            event.preventDefault()\n            // edit item\n            props.updateItem(item.id, item)\n        }}\n        >\n            <label>Item</label>\n            <input \n            type=\"text\" \n            name=\"name\" \n            value={item.name}\n            onChange={handleInputChange}\n            />\n            <label>Quantity</label>\n            <input \n            type=\"number\" \n            name=\"quantity\" \n            value={item.quantity}\n            onChange={handleInputChange}\n            />\n            <button>Edit Item</button>\n            <button\n                onClick={() => props.setEditing(false)}\n                className=\"button muted-button\">\n               Cancel\n            </button>\n        </form>\n    )\n\n}\n\nexport default EditItemForm;","import React, { useState, Fragment } from 'react';\nimport GroceryList from './tables/GroceryList';\nimport AddItemForm from './forms/AddItemForm';\nimport EditItemForm from './forms/EditItemForm';\n\nconst App = () => {\n  const groceryData = [\n    {id: 1, name: 'Bread', quantity: 2},\n    {id: 2, name: 'Butter', quantity: 1},\n    {id: 3, name: 'Milk', quantity: 1},\n    {id: 4, name: 'Cheese', quantity: 1},\n    {id: 5, name: 'Eggs', quantity: 1},\n    {id: 6, name: 'Yogurt', quantity: 4},\n    {id: 7, name: 'Granola', quantity: 1},\n\n  ]\n\n  const initialFormState = { id: null, name: '', quantity: ''};\n\n\n  const [items, setItems] = useState(groceryData);\n  const [editing, setEditing] = useState(false);\n  const [currentItem, setCurrentItem]= useState(initialFormState);\n\n  // See and update what the current item being edited is:\n  const editRow = (item) => {\n    setEditing(true)\n\n    setCurrentItem({ id: item.id, name: item.name, quantity: item.quantity })\n  }\n\n  // Edit Item\n  const updateItem = ( id, updateItem ) => {\n    setEditing(false)\n\n    setItems(items.map((item) => (item.id === id ? updateItem: item)))\n  }\n\n  // Add Item\n  const addItem = (item) => {\n    item.id = items.length + 1\n    setItems([...items, item])\n  }\n\n  // Delete Item\n  const deleteItem = (id) => {\n    setEditing(false)\n    setItems(items.filter((item) => item.id !== id))\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>CRUD Grocery List with Hooks</h1>\n        <div className=\"flex-row\">\n          <div className=\"flex-large\">\n            {editing ? (\n              <Fragment>\n                <h2>Edit Item</h2>\n                <EditItemForm\n                setEditing={setEditing}\n                editing={editing}\n                currentItem={currentItem}\n                updateItem={updateItem} />\n              </Fragment>\n            ) : (\n              <Fragment>\n                <h2>Add Item</h2>\n                  <AddItemForm addItem={addItem}/>\n              </Fragment>\n             )}\n             </div>\n          <div className=\"flex-large\">\n            <h2>View List</h2>\n            <GroceryList \n              items={items} \n              deleteItem={deleteItem}\n              editRow={editRow}\n              />\n          </div>\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}